# -*- coding: utf-8 -*-
"""pydp-27_PETROV_I_A_dz3.ipynb""

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11XIBnJyY7NFAs-gtL8Ethz9tNQ1La3aR

#Петров Игорь (pydp-27)

##ДЗ 03 "«Управляющие конструкции и коллекции»(ч2)"

### Задание 1
"""

#Задание 1
ids = {'user1': [213, 213, 213, 15, 213],
      'user2': [54, 54, 119, 119, 119],
      'user3': [213, 98, 98, 35]}
#Результат: {98, 35, 15, 213, 54, 119}

buf_list = []
res = []

for id in ids:
  buf_list.append(ids.get(id))

for idb in buf_list:
  for uid in idb:
      res.append(uid)

print('Уникальная geo-метка:', set(res))

"""###Задание 2"""

#Задание 2
queries = [
'смотреть сериалы онлайн',
'новости спорта',
'афиша кино',
'курс доллара',
'сериалы этим летом',
'курс по питону',
'сериалы про спорт',
]

words_list = []
buf_spc = []
res_id = []
res = {}

for query in queries:
  words_list.append(query)

q_cnt = int(len(words_list))

for word in words_list:                                         #бежим по эл-ам списка и считаем пробелы во фразах
  buf_space = word.count(' ')
  #print(buf_space)
  buf_spc.append(buf_space)
  
  if(int(buf_space) > 0 and buf_spc.count(int(buf_space)) > 0):
    res[int(buf_space)] = buf_spc.count(int(buf_space))         #создаем словарь key=кол-во пробелов, value=сколько раз повторяется во фразах
    
    res_id.append(int(buf_space))                               #собираем id ключей для дальнейшей переборки словаря
     #print(set(res_id))

for i in set(res_id):                                           #для переборки заданных нам ключей в словарях всегда надо использовать сторонний лист id?
  prc_val = round((int(res.get(i)) / q_cnt)*100 , 2)
  print(f'Поисковых запросов, содержащих {i+1} слов(а): {prc_val} %')

#p.s Эта задачка было мощной))

"""###Задание 3"""

results = {
'vk': {'revenue': 103, 'cost': 98},
'yandex': {'revenue': 179, 'cost': 153},
'facebook': {'revenue': 103, 'cost': 110},
'adwords': {'revenue': 35, 'cost': 34},
'twitter': {'revenue': 11, 'cost': 24},
}
#‘vk’: {‘revenue’: 103, ‘cost’: 98, ‘ROI’: 5.1},
buf_res = {}
res = {}
keys = []
j = 0

for i in results.keys():
  keys.append(i)

for j in keys:
  buf_val = results.get(j)
  roi_val = round((buf_val.get('revenue') / buf_val.get('cost') - 1) * 100 , 2)
  #print(roi_val)    
  buf_res['ROI'] = roi_val
  buf_res.update(results.get(j))
  res[j] = buf_res.copy()
  
print(res)

"""###Задание 4"""

#Задание 4
stats = {'facebook': 55, 'yandex': 115, 'vk': 120, 'google': 99, 'email': 42, 'ok': 98}
vals = []

for key, val in stats.items():
  vals.append(val)
  max_val = max(vals)
  if(max_val == val): res_name = key

print('Максимальный объем продаж на рекламном канале:', res_name)

"""###Задание 5"""

#Задание 5
#5.1
my_list = ['2018-01-01', 'yandex', 'cpc', 100]
#Результат: {‘2018-01-01’: {‘yandex’: {‘cpc’: 100}}}

res = {}
last_key = int(len(my_list))-1
res = {my_list[last_key-1]: my_list[last_key]}

for key in reversed(my_list):
 #   print(my_list.index(key))
  #  print('key:', key)
    now_val = key
    
    #print('now_val:',now_val)
    
    if my_list.index(key) <= last_key-2: 
     res = {now_val: res}

print('Результат 1:', res)

#5.2
my_list = ['a', 'b', 'c', 'd', 'e', 'f']
#Результат: {‘a’: {‘b’: {‘c’: {‘d’: {‘e’: ‘f’}}}}}

res = {}
last_key = int(len(my_list))-1
res = {my_list[last_key-1]: my_list[last_key]}

#print('last_key',last_key)

for key in reversed(my_list):
 #   print(my_list.index(key))
  #  print('key:', key)
    now_val = key
    
    #print('now_val:',now_val)
    
    if my_list.index(key) <= last_key-2: 
     res = {now_val: res}

print('Результат 2:', res)

#p.s Эта задачка была еще сложнее - 2 дня потратил. никак не мог понять как вкладывать коллекции друг в друга, но гугл помог